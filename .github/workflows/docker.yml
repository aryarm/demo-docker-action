name: Docker

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'

env:
  # apply a unique prefix to all container images
  # TODO: change this to the empty string ('') in production
  IMAGE_NAME: 'demo-'

jobs:
  # adapted from https://docs.github.com/en/actions/learn-github-actions/expressions#example-returning-a-json-object
  get_dirs:
    name: Get directory names
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.output-dirs.outputs.matrix }} # contains a list of the module names encoded as a json array
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: get directory names
        id: output-dirs
        # adapted from https://stackoverflow.com/a/71687652
        run: |
          matrix=$(ls -d */ | jq --raw-input --slurp --compact-output 'split("/\n")[:-1]')
          echo "$matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-and-push:
    needs: get_dirs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        name: [github] # list the names of additional container registries here
        # retrieve the environment names dynamically instead of listing them out manually like this:
        # envname: [haptools, trtools]
        envname: ${{ fromJson(needs.get_dirs.outputs.matrix) }}
        include:
          -
            name: github
            registry: ghcr.io
            username: ${{ github.actor }}
            password: GITHUB_TOKEN
          # you can list other container registries here, as well
          # https://github.com/docker/login-action?tab=readme-ov-file#about

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ matrix.username }}
          password: ${{ secrets[matrix.password] }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.registry }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}${{ matrix.envname }}

      - name: prune
        run: docker system prune -af

      - name: Build and push Docker image
        id: builder
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ (hashFiles(format('{0}/Dockerfile', matrix.envname )) != '') && format('{0}/Dockerfile', matrix.envname) || 'Dockerfile' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "ENVNAME=${{ matrix.envname }}"
